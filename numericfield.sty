% Copyright 2021 Sean Robertson

% Licensed under the Apache License, Version 2.0 (the "License");
% you may not use this file except in compliance with the License.
% You may obtain a copy of the License at

%     http://www.apache.org/licenses/LICENSE-2.0

% Unless required by applicable law or agreed to in writing, software
% distributed under the License is distributed on an "AS IS" BASIS,
% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
% See the License for the specific language governing permissions and
% limitations under the License.

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{numericfield}[2020/01/18 Provides numeric form fields]

\RequirePackage{hyperref}
\RequirePackage{xkeyval}
\RequirePackage{xparse}
\RequirePackage{etoolbox}

\NewDocumentCommand{\NumericField}{+O{} +m}{%
  \begingroup

  \kvsetkeys{NField}{#1}

  % Set defaults if they don't exist. "presetkeys" doesn't play nicely with
  % kvsetkeys, so we handle defaults here. Boolean flags seem to already exist
  \ifcsdef{cmdKV@NField@low}{}{\csdef{cmdKV@NField@low}{-Infinity}}
  \ifcsdef{cmdKV@NField@high}{}{\csdef{cmdKV@NField@high}{Infinity}}

  \edef\tmp{
    if (event.rc) {  % In case the user specifies a validate block beforehand
      % Acrobat doesn't seem to have an up-to-date API, which is why
      % we use some outdated javascript
      var x = event.value,
          low = parseFloat("\cmdKV@NField@low"),
          high = parseFloat("\cmdKV@NField@high");
      try {
          if (x.indexOf("x") + x.indexOf("b") + x.indexOf("o") != -3)
            throw "not base 10 or scientific";
          x = Number(x);
          if (x != x) throw "not a number";
          \ifKV@NField@extended \else if (!isFinite(x)) throw "is infinite"; \fi true;
          \ifKV@NField@integer if (x \% 1) throw "not an integer" ; \fi true;
      } catch (err) {
          app.alert("'" + event.value + "' is " + err);
          event.rc = false;
      }
      if (event.rc && x \ifKV@NField@exclusive <= \else < \fi low) {
          app.alert("" + event.value + "\ifKV@NField@exclusive <= \else < \fi " + low);
          event.rc = false;
      } else if (event.rc && x \ifKV@NField@exclusive >= \else > \fi high) {
          app.alert("" + event.value + "\ifKV@NField@exclusive >= \else > \fi " + high);
          event.rc = false;
      }
      \ifcsdef{cmdKV@NField@decimals}{x = x.toFixed(\cmdKV@NField@decimals);}{}
      \ifKV@NField@exponential x = x.toExponential(); \else true; \fi
      event.value = x;
    }
  }

  \ifcsempty{Fld@validate@code}{
    % No user-specified validate code block. We can go ahead and set it to the
    % above
    \csdef{Fld@validate@code}{{\tmp}}
  }{
    % User specified some validatation code. We have to encase it in an outer
    % Javascript block, then add our tmp code after
    \csappto{Fld@validate@code}{ \tmp}
  }

  \TextField{#2}  % Arguments already stored in Fld@ macros

  \endgroup
}

\define@boolkeys{NField}{%
  integer, exclusive, extended, exponential}[true]

\define@cmdkeys{NField}{%
  low, high, decimals}

\kv@set@family@handler{NField}{%
  % Pass on whatever keys we don't know to hyperref's "Field" parser
  \kvsetkeys{Field}{#1=#2}
}
